<#@ template debug="false" hostspecific="false" language="C#"                      #>
<#@ output extension=".generated.cs"                                               #>
<#@ include file="$(ProjectDir)LinqToDB.Templates\T4Model.ttinclude"               #>
<#@ include file="$(ProjectDir)LinqToDB.Templates\NotifyPropertyChanged.ttinclude" #>
<#
	Model.Usings.Add("System.Collections.ObjectModel");
	Model.Usings.Add("System.Windows");

	Model.Namespace.Name = "LinqToDB.LINQPad";

	Model.Types.Add(
		new Class("ConnectionViewModel",
			new NotifyingProperty("string",       "Name"),
			new NotifyingProperty("ProviderInfo", "SelectedProvider"),
			new NotifyingProperty("string",       "ConnectionString"),
			new NotifyingProperty("int",          "CommandTimeout"),
			new NotifyingProperty("bool",         "Persist"),
			new NotifyingProperty("bool",         "IsProduction"),
			new NotifyingProperty("bool",         "Pluralize"),
			new NotifyingProperty("bool",         "Capitalize"),
			new NotifyingProperty("bool",         "IncludeRoutines"),
			new NotifyingProperty("bool",         "EncryptConnectionString"),
			new NotifyingProperty("bool",         "UseCustomFormatter"),
			new NotifyingProperty("bool",         "UseProviderSpecificTypes"),
			new NotifyingProperty("bool",         "AllowMultipleQuery"),
			new NotifyingProperty("bool",         "OptimizeJoins"),
			//new NotifyingProperty("bool",       "NormalizeNames"),
			new NotifyingProperty("string",       "IncludeSchemas"),
			new NotifyingProperty("string",       "ExcludeSchemas"),
			new NotifyingProperty("string",       "IncludeCatalogs"),
			new NotifyingProperty("string",       "ExcludeCatalogs"),
			new NotifyingProperty("string",       "CustomAssemblyPath"),
			new NotifyingProperty("string",       "CustomTypeName"),
			new NotifyingProperty("string",       "AppConfigPath"),
			new NotifyingProperty("string",       "CustomConfiguration"),
			new NotifyingProperty("bool",         "IsDynamic", "IsDynamic", "DynamicVisibility", "StaticVisibility"),
			new NotifyingProperty("Visibility",   "DynamicVisibility").InitGetter("IsDynamic ? Visibility.Visible : Visibility.Collapsed"),
			new NotifyingProperty("Visibility",   "StaticVisibility").InitGetter("!IsDynamic ? Visibility.Visible : Visibility.Collapsed"),
			new NotifyingProperty("ObservableCollection<ProviderInfo>", "Providers"))
	);

	GenerateModel();
#>